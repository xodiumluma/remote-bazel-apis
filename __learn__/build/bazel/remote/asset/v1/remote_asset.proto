syntax = "proto3";

package build.bazel.remote.asset.v1;

import "build/bazel/remote/execution/v2/remote_execution.proto";
import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

option csharp_namespace = "Build.Bazel.Remote.Asset.v1";
option go_package = "github.com/bazelbuild/remote-apis/build/bazel/remote/asset/v1";
option java_multiple_files = true;
option java_outer_classname = "RemoteAssetProto";
option java_package = "build.bazel.remote.asset.v1";
option obj_class_prefix = "RA";

// Remote Asset API maps from URL + Qualifiers to Digests
// Same content can be referred to from several URIs, e.g. same tarball is available from multiple mirrors and accessible via multiple URLs
// The URLs, when used, should refer to actual content - Fetch service implementations might want to retrieve the content directly
// E.g. git repo's active branch (HEAD) can be referred to as: 
//    uri: https://github.com/bazelbuild/remote-apis.git
// URNs can be used to refer to specific contnet, such as using a uuid namespace id:
//    urn:uuid:<id>
// This is applicable to content that has been uploaded via the Push implementation
// The URN contains an agreed-upon key but doesn't mean anything else
//
// Service implementations can mix and match URLs and URNs, or just specify URLs, or only URNs for Push-uploaded content - no hard and fast rule

// In order to ensure that content is unique or for subselecting content with a common URI, qualifiers are used

